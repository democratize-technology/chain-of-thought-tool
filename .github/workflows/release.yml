name: Create Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v0.1.1)'
        required: true
        type: string

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Extract version
      id: version
      run: |
        if [[ "${{ github.event_name }}" == "push" ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        else
          VERSION=${{ github.event.inputs.version }}
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "version_number=${VERSION#v}" >> $GITHUB_OUTPUT
        echo "Release version: $VERSION"
    
    - name: Generate changelog
      id: changelog
      run: |
        # Simple changelog generation - replace with more sophisticated tool if needed
        CHANGELOG=$(git log --pretty=format:"- %s (%h)" $(git describe --tags --abbrev=0 HEAD^)..HEAD 2>/dev/null || git log --pretty=format:"- %s (%h)" --max-count=10)
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGELOG" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.version }}
        name: Release ${{ steps.version.outputs.version }}
        body: |
          ## Changes in ${{ steps.version.outputs.version }}
          
          ${{ steps.changelog.outputs.changelog }}
          
          ## Installation
          ```bash
          pip install chain-of-thought-tool==${{ steps.version.outputs.version_number }}
          ```
          
          ## What's New
          - See changelog above for detailed changes
          - Full documentation at https://github.com/democratize-technology/chain-of-thought-tool
        draft: false
        prerelease: ${{ contains(steps.version.outputs.version, '-') }}
        generate_release_notes: true